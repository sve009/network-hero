Design:

TO DO:
- Game end code
- Clean up code (arrays vs p1 p2)
- BUGS
- Ensure it works across network (print ip)
- Rewrite so compiles on linux
- Design cybermon thingies
- Design movelist
- Rewrite initial connection server code
- Comment + error check
- Decrement status counter in server loop

Presentation:
- Have them play it!
- Discussion points
  - Attack + Status + Dodge math
  - Game state design
  - Implementation details
    - Server + client code
    - UI
    - Threading
    - Parser

Tools:
  - SDL

Big questions:
  - Simultaneous(!) or in order?

General:
  - Differentiation of roles
  - More health = Greater importance on buffs + debuffs + status effects

Mon design:
  - Attack
  - Defense (health? maybe?)
  - S. Attack
  - S. Defense
  - Agility = Speed / Dodge / Acc
  - Status att + res
  - Element
  - Move list

Moves:
  - Power (damage)
  - Accuracy
  - Number of uses
  - Element
  - Effect

Actions:
  - Use a move
  - Switch
  - Guard
  - (items if time)

Elemental system:
  - Fire
  - Water
  - Air
  - Rock
  - Electric

  Water -> Fire
  Fire -> Air
  Air -> Rock
  Rock -> Electricity
  Electricity -> Water

  Electric -> Air
  Air -> Water
  Water -> Rock
  Rock -> Fire
  Fire -> Electric

Coding Elements:
  - Parser for stats page
  - Server code
  - Client code
  - Possible SDL implementation
